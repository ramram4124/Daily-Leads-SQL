name: Scheduled Lead Report

on:
  schedule:
    # Runs at 11:00, 14:00, 16:00, and 18:00 IST (UTC+5:30)
    - cron: '30 5,8,10,12 * * *'  # UTC times: 05:30, 08:30, 10:30, 12:30
  workflow_dispatch:

jobs:
  generate-report:
    runs-on: ubuntu-latest
    environment: production
    
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

    steps:
    - name: Verify Environment Variables
      # Verifying presence of environment secrets (not plain env variables) for security
      run: |
        missing_secrets=()
        
        if [[ -z "${{ secrets.DB_HOST }}" ]]; then
          missing_secrets+=("DB_HOST")
        fi
        if [[ -z "${{ secrets.DB_USER }}" ]]; then
          missing_secrets+=("DB_USER")
        fi
        if [[ -z "${{ secrets.DB_NAME }}" ]]; then
          missing_secrets+=("DB_NAME")
        fi
        if [[ -z "${{ secrets.DB_PORT }}" ]]; then
          missing_secrets+=("DB_PORT")
        fi
        if [[ -z "${{ secrets.DB_PASSWORD }}" ]]; then
          missing_secrets+=("DB_PASSWORD")
        fi
        if [[ -z "${{ secrets.EMAIL_SENDER }}" ]]; then
          missing_secrets+=("EMAIL_SENDER")
        fi
        if [[ -z "${{ secrets.EMAIL_RECEIVER }}" ]]; then
          missing_secrets+=("EMAIL_RECEIVER")
        fi
        if [[ -z "${{ secrets.EMAIL_PASSWORD }}" ]]; then
          missing_secrets+=("EMAIL_PASSWORD")
        fi
        
        if [ ${#missing_secrets[@]} -ne 0 ]; then
          echo "Error: The following secrets are not set:"
          printf '%s\n' "${missing_secrets[@]}"
          exit 1
        fi
        
        echo "All required secrets are properly configured"

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create log directory
      run: mkdir -p logs

    - name: Run report script
      run: python main.py > logs/execution.log 2>&1

    - name: Archive logs
      if: always()  # This ensures logs are uploaded even if script fails
      uses: actions/upload-artifact@v4
      with:
        name: execution-logs
        path: logs/
        retention-days: 5
